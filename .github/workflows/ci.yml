on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
  workflow_dispatch:

name: CI

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
      - run: nix flake check -L

  release-ll:
    name: w5500-ll crates.io release
    if: startsWith(github.ref, 'refs/tags/ll/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd ll
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-hl:
    name: w5500-hl crates.io release
    if: startsWith(github.ref, 'refs/tags/hl/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd hl
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-dhcp:
    name: w5500-dhcp crates.io release
    if: startsWith(github.ref, 'refs/tags/dhcp/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd dhcp
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-regsim:
    name: w5500-regsim crates.io release
    if: startsWith(github.ref, 'refs/tags/regsim/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd regsim
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-dns:
    name: w5500-dns crates.io release
    if: startsWith(github.ref, 'refs/tags/dns/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd dns
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-mqtt:
    name: w5500-mqtt crates.io release
    if: startsWith(github.ref, 'refs/tags/mqtt/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd mqtt
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-sntp:
    name: w5500-sntp crates.io release
    if: startsWith(github.ref, 'refs/tags/sntp/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd sntp
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release-tls:
    name: w5500-tls crates.io release
    if: startsWith(github.ref, 'refs/tags/tls/v')
    needs: [ "check" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - name: Publish
        run: |
          cd tls
          cargo publish --no-verify --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
